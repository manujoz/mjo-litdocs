---
import type { BreadcrumbItem } from "@/types/docs";

import Footer from "@/components/layout/Footer.astro";
import Header from "@/components/layout/Header.astro";
import Sidebar from "@/components/layout/Sidebar.astro";
import Breadcrumb from "@/components/ui/Breadcrumb.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";

import TocSidebar from "@/components/layout/TocSidebar.astro";
import { navigationSections } from "@/lib/navgation";

export interface Props {
    title?: string;
    description?: string;
    currentPath?: string;
    breadcrumbItems?: BreadcrumbItem[];
}

const { title = "Documentation", description = "Complete documentation for MJO-LITUI component library", currentPath = "", breadcrumbItems = [] } = Astro.props;

const fullTitle = title === "Documentation" ? "MJO-LITUI - Documentation" : `${title} - MJO-LITUI`;

const breadcrumbItemsExample = [
    { label: "Home", href: "/" },
    { label: "Documentation", href: "/docs" },
    { label: "Theming", href: "/docs/theming" },
    { label: "Dark Mode", isCurrentPage: true },
];
---

<BaseLayout title={fullTitle} description={description}>
    <Header />
    <div class="docs-layout">
        <Sidebar navigationSections={navigationSections} currentPath={currentPath} />
        <main class="docs-content">
            <Breadcrumb items={breadcrumbItems} />
            <div class="docs-article">
                <slot />
            </div>
            <div class="docs-page-nav">
                <div class="page-nav-prev">
                    <!-- This will be populated dynamically based on the current page -->
                </div>
                <div class="page-nav-next">
                    <!-- This will be populated dynamically based on the current page -->
                </div>
            </div>
        </main>
        <TocSidebar />
    </div>
    <Footer />
</BaseLayout>

<style>
    /* Documentation Layout */
    .docs-layout {
        position: relative;
        display: grid;
        grid-template-columns: repeat(1, minmax(0, 1fr));
        gap: 32px;
        max-width: 1400px;
        margin: 0 auto;
    }
    .docs-content {
        position: relative;
        padding: 2.5rem 15px 4.5rem;
        box-sizing: border-box;
    }
    @media (min-width: 1024px) {
        .docs-layout {
            grid-template-columns: 280px minmax(0, 1fr);
        }
        .docs-content {
            padding: 2.5rem 15px 4.5rem 0;
        }
    }

    @media (min-width: 1280px) {
        .docs-layout {
            grid-template-columns: 280px minmax(0, 1fr) 240px;
        }
        .docs-content {
            padding: 2.5rem 0 4.5rem;
        }
    }
</style>

<script>
    // Initialize the global logger functionality
    import { initLogger } from "@/lib/logger";
    initLogger();
</script>
