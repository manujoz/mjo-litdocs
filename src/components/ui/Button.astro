---
export interface Props {
    variant?: "primary" | "secondary" | "ghost" | "outline" | "codeblock";
    size?: "sm" | "md" | "lg";
    href?: string;
    type?: "button" | "submit" | "reset";
    disabled?: boolean;
    class?: string;
    title?: string;
    target?: "_blank" | "_self" | "_parent" | "_top";
    rel?: string;
    active?: boolean;
    [key: string]: any;
}

const { variant = "primary", size = "md", href, type = "button", disabled = false, active = false, class: className = "", ...rest } = Astro.props;

const baseClasses = "btn";
const variantClasses = `btn-${variant}`;
const sizeClasses = `btn-${size}`;
const activeClasses = active ? "btn-active" : "";
const allClasses = [baseClasses, variantClasses, sizeClasses, activeClasses, className];

const Element = href ? "a" : "button";

// Force Tailwind to include these utility classes
// bg-primary-200 text-accent-foreground bg-secondary bg-accent text-primary-foreground
---

<Element class:list={allClasses} href={href} type={href ? undefined : type} disabled={disabled} tabindex={active ? -1 : 0} {...rest}>
    <slot />
</Element>

<style>
    .btn {
        position: relative;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: var(--mjo-radius-medium);
        font-size: var(--mjo-font-size-small);
        font-weight: 500;
        border: none;
        text-decoration-line: none;
        transition:
            background-color 200ms,
            color 200ms;
    }

    .btn:focus-visible {
        outline: solid 2px var(--mjo-primary-color);
    }

    .btn:disabled {
        pointer-events: none;
        opacity: 0.5;
    }

    .btn-primary {
        background-color: var(--mjo-primary-color);
        color: var(--mjo-primary-foreground-color);
    }

    .btn-primary:hover {
        background-color: var(--mjo-primary-color-600);
    }

    .btn-secondary {
        background-color: var(--mjo-secondary-color);
        color: var(--mjo-secondary-foreground-color);
    }

    .btn-secondary:hover {
        background-color: var(--mjo-secondary-color-600);
    }

    .btn-ghost {
        background-color: transparent;
        color: var(--mjo-foreground-color);
    }

    .btn-ghost:hover {
        background-color: var(--mjo-primary-color-100);
        color: var(--mjo-color-black);
    }

    .btn-outline {
        border: solid 1px var(--mjo-border-color);
        background-color: var(--mjo-background-color);
        color: var(--mjo-foreground-color);
    }

    .btn-outline:hover {
        background-color: var(--mjo-secondary-color);
        color: var(--font-secondary-foreground-color);
    }

    /* Button Size Variants */
    .btn-sm {
        height: 36px;
        padding-left: 12px;
        padding-right: 12px;
    }

    .btn-md {
        height: 40px;
        padding: 8px 16px;
    }

    .btn-lg {
        height: 44px;
        padding-inline: 32px;
    }

    .btn-codeblock {
        height: auto;
        background-color: var(--mjo-background-color-card);
        color: var(--mjo-foreground-color);
        font-size: var(--mjo-font-size-small);
        padding: 7px 15px;
        cursor: pointer;
        display: block;
        border-radius: 0;
        font-weight: 600;
        overflow: hidden;
    }
    .btn-codeblock:first-of-type {
        border-top-left-radius: var(--mjo-radius-large);
    }
    .btn-codeblock:last-of-type {
        border-top-right-radius: var(--mjo-radius-large);
    }
    .btn-codeblock:focus-visible {
        outline: solid 2px var(--mjo-primary-color);
        outline-offset: -2px;
    }
    .btn-codeblock.btn-active,
    .btn-codeblock:hover {
        color: #111111;
        background-color: var(--mjo-primary-color-100);
    }
</style>
