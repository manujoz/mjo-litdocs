---
import { AvatarBordered } from "@/components/examples/avatar/avatar-bordered";
import { AvatarClickable } from "@/components/examples/avatar/avatar-clickable";
import { AvatarDisabled } from "@/components/examples/avatar/avatar-disabled";
import { AvatarFallbackicon } from "@/components/examples/avatar/avatar-fallbackicon";
import { AvatarName } from "@/components/examples/avatar/avatar-name";
import { AvatarNamecoloured } from "@/components/examples/avatar/avatar-namecoloured";
import { AvatarRadius } from "@/components/examples/avatar/avatar-radius";
import { AvatarSize } from "@/components/examples/avatar/avatar-size";
import { AvatarUsage } from "@/components/examples/avatar/avatar-usage";
import Codeblock from "@/components/ui/codeblock/Codeblock.astro";
import CodeblockPre from "@/components/ui/codeblock/CodeblockPre.astro";
import CodeExample from "@/components/ui/CodeExample.astro";
import Link from "@/components/ui/Link.astro";
import Logger from "@/components/ui/logger/Logger.astro";
import Table from "@/components/ui/table/Table.astro";
import TableBody from "@/components/ui/table/TableBody.astro";
import TableCell from "@/components/ui/table/TableCell.astro";
import TableCellHeader from "@/components/ui/table/TableCellHeader.astro";
import TableHeader from "@/components/ui/table/TableHeader.astro";
import TableRow from "@/components/ui/table/TableRow.astro";
import Typography from "@/components/ui/Typography.astro";
import DocsLayout from "@/layouts/DocsLayout.astro";

const eventClickDetail = `
{
    value: string;
}
`;
const eventErrorDetail = `
{
    message: string;
}
`;
---

<DocsLayout
    title="Avatar"
    description="The avatar component is a visual representation of a user or entity. Learn how to use the avatar component in your project."
    currentPath="/docs/components/avatar"
>
    <article class="prose">
        <Typography tag="h1" size="title2" weight="bold">mjo-avatar</Typography>
        <Typography class="explain" tag="p" spacing="md">
            The mjo-avatar component is a visual representation of a user or entity. It is useful for displaying user profile pictures or icons or initials.
        </Typography>
        <Typography tag="h2" size="title3" weight="bold" spacing="md">Import</Typography>
        <Typography class="explain" tag="p" spacing="md">
            To use the mjo-avatar component in your project, you need to import it first. You can do this by adding the following import statement to your
            JavaScript or TypeScript file:
        </Typography>
        <Codeblock>
            <CodeblockPre language="typescript" bugTitle="[BUG mjo-avatar]">
                {`import "mjo-litui/mjo-avatar";`}
            </CodeblockPre>
        </Codeblock>
        <Typography tag="h2" size="title3" weight="bold" spacing="md">Usage</Typography>
        <Typography class="explain" tag="p" spacing="md">
            Basic usage of the mjo-avatar component. Note that the avatar has a property priority order that affects its behavior and appearance. If
            <code class="inline">src</code> is provided, it will take precedence over <code class="inline">fallbackIcon</code> and <code class="inline"
                >name</code
            >. If <code class="inline">fallbackIcon</code> is provided, it will take precedence over <code class="inline">name</code>. Therefore, if you want to
            display the initial in the avatar, you should not provide <code class="inline">src</code> or <code class="inline">fallbackIcon</code>.
        </Typography>
        <CodeExample>
            <AvatarUsage client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-alert]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import { AiOutlineUser } from "mjo-icons/ai";

import "mjo-litui/mjo-avatar";

@customElement("avatar-usage")
export class AvatarUsage extends LitElement {
    render() {
        return html\`
            <mjo-avatar src="https://i.pravatar.cc/150?img=15" alt="Avatar"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=33" bordered color="default" alt="Avatar"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=39" bordered color="primary" alt="Avatar"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=37" bordered color="secondary" alt="Avatar"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=66" bordered color="info" alt="Avatar"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=12" bordered color="success" alt="Avatar"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=58" bordered color="warning" alt="Avatar"></mjo-avatar>
            <mjo-avatar src="https://broken-image" name="Olivia" bordered color="error" alt="Avatar"></mjo-avatar>
            <mjo-avatar fallbackIcon=\${AiOutlineUser} bordered color="primary" alt="Avatar"></mjo-avatar>
            <mjo-avatar name="User Name" bordered color="secondary" alt="Avatar"></mjo-avatar>
            <mjo-avatar name="User Name" bordered color="warning" nameColoured alt="Avatar"></mjo-avatar>
        \`;
    }

    static styles = [
        css\`
            :host {
                display: block;
                display: flex;
                flex-flow: row wrap;
                gap: var(--mjo-space-medium);
                align-items: center;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Typography tag="h3" size="xxl" weight="bold" spacing="md">Size</Typography>
        <Typography class="explain" tag="p" spacing="md">The avatar component supports different sizes.</Typography>
        <CodeExample>
            <AvatarSize client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-avatar]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import "mjo-litui/mjo-avatar";

@customElement("avatar-size")
export class AvatarSize extends LitElement {
    render() {
        return html\`
            <mjo-avatar src="https://i.pravatar.cc/150?img=33" size="small" name="Jhon Doe"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=33" size="medium" name="Jhon Doe"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=33" size="large" name="Jhon Doe"></mjo-avatar>
        \`;
    }

    static styles = [
        css\`
            :host {
                display: block;
                display: flex;
                flex-flow: row wrap;
                gap: var(--mjo-space-medium);
                align-items: center;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Typography tag="h3" size="xxl" weight="bold" spacing="md">Radius</Typography>
        <Typography class="explain" tag="p" spacing="md">The avatar component supports different border radius.</Typography>
        <CodeExample>
            <AvatarRadius client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-avatar]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import "mjo-litui/mjo-avatar";

@customElement("avatar-radius")
export class AvatarRadius extends LitElement {
    render() {
        return html\`
            <mjo-avatar src="https://i.pravatar.cc/150?img=26" radius="none" name="Susan Clothes" color="primary"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=26" radius="small" name="Susan Clothes" color="primary"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=26" radius="medium" name="Susan Clothes" color="primary"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=26" radius="large" name="Susan Clothes" color="primary"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=26" radius="full" name="Susan Clothes" color="primary"></mjo-avatar>
        \`;
    }

    static styles = [
        css\`
            :host {
                display: block;
                display: flex;
                flex-flow: row wrap;
                gap: var(--mjo-space-medium);
                align-items: center;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Typography tag="h3" size="xxl" weight="bold" spacing="md">Bordered</Typography>
        <Typography class="explain" tag="p" spacing="md">Bordered style for the avatar component.</Typography>
        <CodeExample>
            <AvatarBordered client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-avatar]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import "mjo-litui/mjo-avatar";

@customElement("avatar-bordered")
export class AvatarBordered extends LitElement {
    render() {
        return html\`
            <mjo-avatar src="https://i.pravatar.cc/150?img=8" bordered name="Andrew Pain" color="default"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=8" bordered name="Andrew Pain" color="primary"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=8" bordered name="Andrew Pain" color="secondary"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=8" bordered name="Andrew Pain" color="info"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=8" bordered name="Andrew Pain" color="success"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=8" bordered name="Andrew Pain" color="warning"></mjo-avatar>
            <mjo-avatar src="https://i.pravatar.cc/150?img=8" bordered name="Andrew Pain" color="error"></mjo-avatar>
        \`;
    }

    static styles = [
        css\`
            :host {
                display: block;
                display: flex;
                flex-flow: row wrap;
                gap: var(--mjo-space-medium);
                align-items: center;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Typography tag="h3" size="xxl" weight="bold" spacing="md">Disabled</Typography>
        <Typography class="explain" tag="p" spacing="md">Disabled state for the avatar component.</Typography>
        <CodeExample>
            <AvatarDisabled client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-avatar]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import "mjo-litui/mjo-avatar";

@customElement("avatar-disabled")
export class AvatarDisabled extends LitElement {
    render() {
        return html\`<mjo-avatar src="https://i.pravatar.cc/150?img=42" name="Martha Smith" disabled></mjo-avatar>\`;
    }

    static styles = [
        css\`
            :host {
                display: block;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Typography tag="h3" size="xxl" weight="bold" spacing="md">Fallback Icon</Typography>
        <Typography class="explain" tag="p" spacing="md">Icon displayed when the avatar image fails to load or is not provided.</Typography>
        <CodeExample>
            <AvatarFallbackicon client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-avatar]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import { AiOutlineApple, AiOutlineUser } from "mjo-icons/ai";

import "mjo-litui/mjo-avatar";

@customElement("avatar-fallbackicon")
export class AvatarFallbackicon extends LitElement {
    render() {
        return html\`
            <mjo-avatar fallbackIcon=\${AiOutlineUser} name="Josh Williams"></mjo-avatar>
            <mjo-avatar src="https://broken-image" fallbackIcon=\${AiOutlineApple} name="Josh Williams"></mjo-avatar>
        \`;
    }

    static styles = [
        css\`
            :host {
                display: block;
                display: flex;
                flex-flow: row wrap;
                gap: var(--mjo-space-medium);
                align-items: center;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Typography tag="h3" size="xxl" weight="bold" spacing="md">Name</Typography>
        <Typography class="explain" tag="p" spacing="md"
            >The initial of the user's name displayed when the avatar image fails to load or is not provided.</Typography
        >
        <CodeExample>
            <AvatarName client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-avatar]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import "mjo-litui/mjo-avatar";

@customElement("avatar-name")
export class AvatarName extends LitElement {
    render() {
        return html\`
            <mjo-avatar name="Sophia Willis"></mjo-avatar>
            <mjo-avatar src="https://broken-image" name="Sophia Willis"></mjo-avatar>
        \`;
    }

    static styles = [
        css\`
            :host {
                display: block;
                display: flex;
                flex-flow: row wrap;
                gap: var(--mjo-space-medium);
                align-items: center;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Typography tag="h3" size="xxl" weight="bold" spacing="md">Name Coloured</Typography>
        <Typography class="explain" tag="p" spacing="md">The background color based on the user's name initials.</Typography>
        <CodeExample>
            <AvatarNamecoloured client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-avatar]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import "mjo-litui/mjo-avatar";

@customElement("avatar-namecoloured")
export class AvatarNamecoloured extends LitElement {
    render() {
        return html\`
            <mjo-avatar name="Sophia Willis" nameColoured></mjo-avatar>
            <mjo-avatar name="John Doe" nameColoured></mjo-avatar>
            <mjo-avatar name="Alice Smith" nameColoured></mjo-avatar>
            <mjo-avatar name="Bob Johnson" nameColoured></mjo-avatar>
        \`;
    }

    static styles = [
        css\`
            :host {
                display: block;
                display: flex;
                flex-flow: row wrap;
                gap: var(--mjo-space-medium);
                align-items: center;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Typography tag="h3" size="xxl" weight="bold" spacing="md">Clickable</Typography>
        <Typography class="explain" tag="p" spacing="md">The avatar can be made clickable and will emit a custom event when clicked.</Typography>
        <CodeExample space="sm">
            <AvatarClickable client:visible slot="preview" />
            <Codeblock showHeader slot="code">
                <CodeblockPre language="lit" bugTitle="[BUG mjo-avatar]">
                    {
                        `import { LitElement, css, html } from "lit";
import { customElement } from "lit/decorators.js";

import "mjo-litui/mjo-avatar";

@customElement("avatar-namecoloured")
export class AvatarNamecoloured extends LitElement {
    render() {
        return html\`
            <mjo-avatar name="Sophia Willis" nameColoured></mjo-avatar>
            <mjo-avatar name="John Doe" nameColoured></mjo-avatar>
            <mjo-avatar name="Alice Smith" nameColoured></mjo-avatar>
            <mjo-avatar name="Bob Johnson" nameColoured></mjo-avatar>
        \`;
    }

    static styles = [
        css\`
            :host {
                display: block;
                display: flex;
                flex-flow: row wrap;
                gap: var(--mjo-space-medium);
                align-items: center;
            }
        \`,
    ];
}
`
                    }
                </CodeblockPre>
            </Codeblock>
        </CodeExample>
        <Logger id="avatar-clickable" initialMessage="Click the avatar to see logs" />
        <Typography tag="h2" size="title3" weight="bold" spacing="md">Properties</Typography>
        <Typography class="explain" tag="p" spacing="md">Properties available on the mjo-alert component.</Typography>
        <Table>
            <TableHeader>
                <TableRow>
                    <TableCellHeader>Property</TableCellHeader>
                    <TableCellHeader>Type</TableCellHeader>
                    <TableCellHeader>Default</TableCellHeader>
                    <TableCellHeader minWidth="200px">Description</TableCellHeader>
                </TableRow>
            </TableHeader>
            <TableBody>
                <TableRow>
                    <TableCell><code class="inline">src</code></TableCell>
                    <TableCell><code class="inline">{`string|undefined`}</code></TableCell>
                    <TableCell><code class="inline">{`undefined`}</code></TableCell>
                    <TableCell>Image URL to display in the avatar.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">alt</code></TableCell>
                    <TableCell><code class="inline">{`string|undefined`}</code></TableCell>
                    <TableCell><code class="inline">{`undefined`}</code></TableCell>
                    <TableCell>Alternative text for the avatar image (falls back to name if not provided).</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">fallbackIcon</code></TableCell>
                    <TableCell><code class="inline">{`string|undefined`}</code></TableCell>
                    <TableCell><code class="inline">{`undefined`}</code></TableCell>
                    <TableCell>Custom icon to use as fallback when image is not provided or fails to load.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">name</code></TableCell>
                    <TableCell><code class="inline">{`string|undefined`}</code></TableCell>
                    <TableCell><code class="inline">{`undefined`}</code></TableCell>
                    <TableCell>Name used to generate initial when image and fallbackIcon is not provide or fails to load.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">size</code></TableCell>
                    <TableCell><code class="inline">{`small|medium|large`}</code></TableCell>
                    <TableCell><code class="inline">{`medium`}</code></TableCell>
                    <TableCell>Size of the avatar.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">radius</code></TableCell>
                    <TableCell><code class="inline">{`none|small|medium|large\full`}</code></TableCell>
                    <TableCell><code class="inline">{`full`}</code></TableCell>
                    <TableCell>Border radius of the avatar.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">color</code></TableCell>
                    <TableCell>
                        <code class="inline wrap">{`default|primary|secondary|success`}</code>
                        <code class="inline wrap">{`info|warning|error`}</code>
                    </TableCell>
                    <TableCell><code class="inline">default</code></TableCell>
                    <TableCell>Type of the alert.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">bordered</code></TableCell>
                    <TableCell><code class="inline">{`boolean`}</code></TableCell>
                    <TableCell><code class="inline">{`false`}</code></TableCell>
                    <TableCell>Whether the avatar should have a border.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">disabled</code></TableCell>
                    <TableCell><code class="inline">{`boolean`}</code></TableCell>
                    <TableCell><code class="inline">{`false`}</code></TableCell>
                    <TableCell>Whether the avatar is disabled.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">nameColoured</code></TableCell>
                    <TableCell><code class="inline">{`boolean`}</code></TableCell>
                    <TableCell><code class="inline">{`false`}</code></TableCell>
                    <TableCell>Applied automatic color generation based on the first letter of the name.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">clickable</code></TableCell>
                    <TableCell><code class="inline">{`boolean`}</code></TableCell>
                    <TableCell><code class="inline">{`false`}</code></TableCell>
                    <TableCell>Whether the avatar is clickable.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">value</code></TableCell>
                    <TableCell><code class="inline">{`string|undefined`}</code></TableCell>
                    <TableCell><code class="inline">{`undefined`}</code></TableCell>
                    <TableCell>Custom value passed in the mjo-avatar:click event detail.</TableCell>
                </TableRow>
            </TableBody>
        </Table>
        <Typography tag="h2" size="title3" weight="bold" spacing="md">API</Typography>
        <Typography class="explain" tag="p" spacing="md">Methods available on the mjo-avatar component.</Typography>
        <Table>
            <TableHeader>
                <TableRow>
                    <TableCellHeader>Method</TableCellHeader>
                    <TableCellHeader>Parameters</TableCellHeader>
                    <TableCellHeader>Returns</TableCellHeader>
                    <TableCellHeader minWidth="200px">Description</TableCellHeader>
                </TableRow>
            </TableHeader>
            <TableBody>
                <TableRow>
                    <TableCell><code class="inline">click()</code></TableCell>
                    <TableCell><code class="inline">-</code></TableCell>
                    <TableCell><code class="inline">void</code></TableCell>
                    <TableCell>Trigger the click event on the avatar component.</TableCell>
                </TableRow>
            </TableBody>
        </Table>
        <Typography tag="h2" size="title3" weight="bold" spacing="md">Events</Typography>
        <Typography class="explain" tag="p" spacing="md">The mjo-alert has the following events available:</Typography>
        <Table>
            <TableHeader>
                <TableRow>
                    <TableCellHeader width="190px">Event</TableCellHeader>
                    <TableCellHeader width="190px">CustomEvent type</TableCellHeader>
                    <TableCellHeader>Detail</TableCellHeader>
                    <TableCellHeader minWidth="200px">Notes</TableCellHeader>
                </TableRow>
            </TableHeader>
            <TableBody>
                <TableRow>
                    <TableCell><code class="inline">mjo-avatar:click</code></TableCell>
                    <TableCell><code class="inline">MjoAvatarClickEvent</code></TableCell>
                    <TableCell><pre>{eventClickDetail}</pre></TableCell>
                    <TableCell>Emitted when the avatar is clicked.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">mjo-avatar:error</code></TableCell>
                    <TableCell><code class="inline">MjoAvatarErrorEvent</code></TableCell>
                    <TableCell><pre>{eventErrorDetail}</pre></TableCell>
                    <TableCell>Emitted when the avatar image fails to load.</TableCell>
                </TableRow>
            </TableBody>
        </Table>
        <Typography tag="h2" size="title3" weight="bold" spacing="md">Theming</Typography>
        <Typography class="explain" tag="p" spacing="md">
            Customization options for the mjo-avatar component. If you need more information about theming, please refer to the documentation <Link
                href="/docs/theming"
                color="primary">here</Link
            >.
        </Typography>
        <Typography tag="h3" size="xl" weight="bold" spacing="md">CSS Variables</Typography>
        <Table>
            <TableHeader>
                <TableRow>
                    <TableCellHeader>Variable</TableCellHeader>
                    <TableCellHeader>Fallback</TableCellHeader>
                    <TableCellHeader minWidth="200px">Used for</TableCellHeader>
                </TableRow>
            </TableHeader>
            <TableBody>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-size-small</code></TableCell>
                    <TableCell><code class="inline">32px</code></TableCell>
                    <TableCell>Size for small avatars.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-size-medium</code></TableCell>
                    <TableCell><code class="inline">44px</code></TableCell>
                    <TableCell>Size for medium avatars.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-size-large</code></TableCell>
                    <TableCell><code class="inline">54px</code></TableCell>
                    <TableCell>Size for large avatars.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-fallback-size-small</code></TableCell>
                    <TableCell><code class="inline">18px</code></TableCell>
                    <TableCell>Size for small avatar fallback icon/text size.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-fallback-size-medium</code></TableCell>
                    <TableCell><code class="inline">28px</code></TableCell>
                    <TableCell>Size for medium avatar fallback icon/text size.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-fallback-size-large</code></TableCell>
                    <TableCell><code class="inline">40px</code></TableCell>
                    <TableCell>Size for large avatar fallback icon/text size.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-radius-small</code></TableCell>
                    <TableCell><code class="inline">4px</code></TableCell>
                    <TableCell>Border radius for small avatars.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-radius-medium</code></TableCell>
                    <TableCell><code class="inline">8px</code></TableCell>
                    <TableCell>Border radius for medium avatars.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-radius-large</code></TableCell>
                    <TableCell><code class="inline">12px</code></TableCell>
                    <TableCell>Border radius for large avatars.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-background-color</code></TableCell>
                    <TableCell><code class="inline">--mjo-color-gray-400</code></TableCell>
                    <TableCell>Default background color.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-fallback-color</code></TableCell>
                    <TableCell><code class="inline">--mjo-color-gray-100</code></TableCell>
                    <TableCell>Fallback icon color.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-name-color</code></TableCell>
                    <TableCell><code class="inline">--mjo-color-gray-100</code></TableCell>
                    <TableCell>Name initial text color (when not coloured).</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-border-color</code></TableCell>
                    <TableCell><code class="inline">--mjo-color-gray-300</code></TableCell>
                    <TableCell>Default border color for avatar.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">--mjo-avatar-border-width</code></TableCell>
                    <TableCell><code class="inline">3px</code></TableCell>
                    <TableCell>Default border width for avatar.</TableCell>
                </TableRow>
            </TableBody>
        </Table>
        <Typography tag="h3" size="xl" weight="bold" spacing="md">CSS Parts</Typography>
        <Table>
            <TableHeader>
                <TableRow>
                    <TableCellHeader>Part</TableCellHeader>
                    <TableCellHeader minWidth="200px">Description</TableCellHeader>
                </TableRow>
            </TableHeader>
            <TableBody>
                <TableRow>
                    <TableCell><code class="inline">container</code></TableCell>
                    <TableCell>The main alert container.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">message-container</code></TableCell>
                    <TableCell>The container for the message, icon and close button.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">icon-container</code></TableCell>
                    <TableCell>The container for the alert icon.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">icon</code></TableCell>
                    <TableCell>The icon element (via exportparts from mjo-icon).</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">message</code></TableCell>
                    <TableCell>The message content area.</TableCell>
                </TableRow>
                <TableRow>
                    <TableCell><code class="inline">detail</code></TableCell>
                    <TableCell>The detail content area.</TableCell>
                </TableRow>
            </TableBody>
        </Table>
    </article>
</DocsLayout>

<style>
    .prose {
        position: relative;
    }
    .explain {
        color: var(--mjo-foreground-color-low);
    }
</style>
